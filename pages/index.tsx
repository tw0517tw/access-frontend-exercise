import Head from "next/head";
import UserList from "../components/UserList";
import axios, { AxiosError } from "axios";
import parseLinkHeader from "parse-link-header";
import styled from "styled-components";
import { useQuery } from "react-query";
import { useState } from "react";
import type { GitHubUser } from "../components/UserListItem";
import type { NextPage } from "next";

const Container = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 720px;

  & > div {
    font-size: 18px;
    margin: 8px 0;
  }
`;

type QueryData = { data: GitHubUser[]; next?: string };
type GitHubAPIErrorBody = { message: string; documentation_url: string };

const Home: NextPage = () => {
  const [since, setSince] = useState("0");
  const {
    isLoading,
    isError,
    data: queryData,
    error,
  } = useQuery<QueryData, AxiosError<GitHubAPIErrorBody>>(
    ["heroes", since],
    () =>
      axios
        .get("https://api.github.com/users", {
          params: {
            per_page: "20",
            since,
          },
        })
        .then((res) => {
          console.log(res);
          const linkHeader = parseLinkHeader(res.headers.link);
          console.log(linkHeader);

          return {
            data: res.data,
            next: linkHeader?.next?.since,
          };
        }),
    { refetchOnWindowFocus: false }
  );

  const { data, next } = queryData || {};
  console.log(data);
  return (
    <Container>
      <Head>
        <title>Access Frontend Exercise</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Access Frontend Exercise</h1>
      {isLoading && "üîÑ"}
      {isError && error && (
        <div>
          <h2>‚ùå{error.message}</h2>
          <div>{error.response?.data.message}</div>
          <div>{error.response?.data.documentation_url}</div>
        </div>
      )}

      {data && (
        <>
          <div>Items on this page: {data.length}</div>
          <div>
            ID on this page: {data[0].id} ~ {data[data.length - 1].id}
          </div>
          {next && (
            <div>
              <button
                onClick={() => {
                  setSince(next);
                }}
              >
                ‚ñ∂
              </button>
            </div>
          )}
          <UserList users={data}></UserList>
        </>
      )}
    </Container>
  );
};

export default Home;
